#!/usr/bin/env bash
# BASH_COMMAND= "set"
# trap 'printf "%s %s\n" + "$BASH_COMMAND" >&2' DEBUG



BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd "$(dirname "${0:-}")"; cd ..; pwd)

echo "build_dir = ${BUILD_DIR} "
echo "cache_dir = ${CACHE_DIR}"
echo `ls $CACHE_DIR`
### Load dependencies

# shellcheck source=vendor/stdlib_v7.sh
source "$BP_DIR/vendor/stdlib_v7.sh"
# shellcheck source=lib/output.sh
source "$BP_DIR/lib/output.sh"
# shellcheck source=lib/monitor.sh
source "$BP_DIR/lib/monitor.sh"
# shellcheck source=lib/environment.sh
source "$BP_DIR/lib/environment.sh"
# shellcheck source=lib/failure.sh
source "$BP_DIR/lib/failure.sh"
# shellcheck source=lib/binaries.sh
source "$BP_DIR/lib/binaries.sh"
# shellcheck source=lib/json.sh
source "$BP_DIR/lib/json.sh"
# shellcheck source=lib/cache.sh
source "$BP_DIR/lib/cache.sh"
# shellcheck source=lib/dependencies.sh
source "$BP_DIR/lib/dependencies.sh"
# shellcheck source=lib/plugin.sh
source "$BP_DIR/lib/plugin.sh"
# shellcheck source=lib/uuid.sh
source "$BP_DIR/lib/uuid.sh"
# shellcheck source=lib/kvstore.sh
source "$BP_DIR/lib/kvstore.sh"
# shellcheck source=lib/metadata.sh
source "$BP_DIR/lib/metadata.sh"
# shellcheck source=lib/features.sh
source "$BP_DIR/lib/features.sh"
# shellcheck source=lib/builddata.sh
source "$BP_DIR/lib/builddata.sh"

export PATH="$BUILD_DIR/.heroku/node/bin:$BUILD_DIR/.heroku/yarn/bin":$PATH

BUILD_DIR=${1:-}
if yarn --version > /dev/null 2>&1; then
  cd "$BUILD_DIR" && yarn test
else
  cd "$BUILD_DIR" && npm test
fi

echo $CACHE_DIR
save_default_cache_directories "$BUILD_DIR" "$CACHE_DIR" "$YARN_CACHE_FOLDER"
save_custom_cache_directories "$BUILD_DIR" "$CACHE_DIR" "$cache_directories"
save_signature "$CACHE_DIR"
